#!/bin/bash

#set -x

PROG=$(basename $0)

usage() {
	echo "usage: $PROG <install|uninstall> <device adaptor directory>"
	echo
	echo "install or un-install MSA device adaptors"
}

main() {
	cmd=$1
	shift
	case $cmd in
		""|-h|--help)
			usage
			;;
		-i|install)
			da_install "$1" "$2"
			;;
		-u|uninstall)
			da_uninstall "$1" "$2"
			;;
		*)
			fatal "unknown command: $1"
			;;
	esac
}

da_install() {
	DA_DIR=$1
	if [ ! -d "$DA_DIR" ]; then
		fatal "device-adaptor dir not found: $DA_DIR"
	fi
	CONF_DIR=$2
	if [ -z "$CONF_DIR" ]; then
		CONF_DIR="conf"
	fi
	[ -d "$DA_DIR/$CONF_DIR" ] || \
		fatal "device-adaptor config dir not found: $DA_DIR/$CONF_DIR"
	
	DA_SRC_PATH=`basename $DA_DIR`

	read_properties_files
	check_create_model
	check_sms_router_conf
	check_create_files
	update_files
	set -x
	update_core_engine DEV_MODE
	set +x
}

da_uninstall() {
	DA_DIR=$1
	if [ ! -d "$DA_DIR" ]; then
		fatal "device-adaptor dir not found: $DA_DIR"
	fi
	CONF_DIR=$2
	if [ -z "$CONF_DIR" ]; then
		CONF_DIR="conf"
	fi
	[ -d "$DA_DIR/$CONF_DIR" ] || \
		fatal "device-adaptor config dir not found: $DA_DIR/$CONF_DIR"
	
	DA_SRC_PATH=basename $DA_DIR

	read_properties_files
	check_sms_router_conf

	target_file="$JENTREPRISE_CONF/custom/models.properties"
	default_file="$JENTREPRISE_CONF/models.properties"


	keyname="${MOD_ID},${MAN_ID}"

	sed "/^$keyname/d" $target_file
	sed "/^$keyname/d" $default_file

}

update_files() {
	update_manufacturers_properties
	update_models_properties
	update_sdExtendedInfo_properties
	update_manageLinks_properties
	update_ses_properties
	update_repository_properties
}


JENTREPRISE_CONF="/opt/ubi-jentreprise/resources/templates/conf/device"
SES_TEMPLATE="/opt/ses/templates/server_ALL"
SES_CONF="/opt/ses/properties/specifics/server_ALL"

check_create_model() {
	default_file="$JENTREPRISE_CONF/models.properties"

	keyname="${MOD_ID},${MAN_ID}"
	if grep  "$keyname" $default_file; then 
		echo "${MAN_NAME}:${MAN_ID} / ${MOD_NAME}:${MOD_ID} found in $default_file. "
		echo "Exit intall"
		exit 0
	fi
}

check_create_files() {

	for prop_file in ses repository sdExtendedInfo manageLinks; do
		target_file="$SES_CONF/$prop_file.properties"

		[ -f "$target_file" ] && continue

		echo "  Copying $target_file"
		/bin/cp -p $SES_TEMPLATE/$prop_file.properties $target_file
	done
}

update_core_engine() {
	
	cd /opt/sms/bin/php 
    
    [[ -L $DA_SRC_PATH ]] && rm -rf $DA_SRC_PATH
    [[ -d $DA_SRC_PATH ]] && mv $DA_SRC_PATH $DA_SRC_PATH.bak
    if [[ $1 = DEV_MODE ]]; then 
        ln -fs /opt/sms/bin/php/OpenMSA_Adapters/adapters/$DA_SRC_PATH $DA_SRC_PATH 
    elif [[ $1 = USER_MODE ]]; then
        rm -rf /opt/sms/bin/php/$DA_SRC_PATH
        cp -r /opt/sms/bin/php/OpenMSA_Adapters/adapters/$DA_SRC_PATH .
    fi
    chown -R ncuser.ncuser /opt/sms/bin/php/$1;
    
    mkdir -p /opt/sms/templates/devices/$DA_SRC_PATH/conf
    cd /opt/sms/templates/devices/$DA_SRC_PATH/conf
	
	deviceid="${MAN_ID}:${MOD_ID}"
	keyname="${MAN_NAME} ${MOD_NAME}"

	if [[ -f sms_router.conf ]]; then
		if grep $deviceid sms_router.conf; then
			echo "$deviceid found in /opt/sms/templates/devices/$DA_SRC_PATH/conf/sms_router.conf"
		else
			echo "add $deviceid to /opt/sms/templates/devices/$DA_SRC_PATH/conf/sms_router.conf"
			echo "# $keyname added by da_installer " >> sms_router.conf
			cat  $DA_DIR/$CONF_DIR/sms_router.conf >> sms_router.conf
		fi
	fi
}

update_manufacturers_properties() {

	target_file="$JENTREPRISE_CONF/custom/manufacturers.properties"
	default_file="$JENTREPRISE_CONF/manufacturers.properties"

	mkdir -p "$JENTREPRISE_CONF/custom/"

  	if [ ! -f $target_file ]; then
		cp $default_file $target_file
		#rm $default_file
	fi

	if [ ! -f $target_file ]; then
		echo "id,name,supported" > $target_file
		fixup_no_newline_at_eof $target_file
	fi

	grep -q "^$MAN_ID," $target_file && return 0

	fixup_no_newline_at_eof $target_file

	echo $MAN_ID',"'$MAN_NAME'",1' >> $target_file

}



update_models_properties() {

	target_file="$JENTREPRISE_CONF/custom/models.properties"
	default_file="$JENTREPRISE_CONF/models.properties"

	mkdir -p "$JENTREPRISE_CONF/custom/"

  	if [ ! -f $target_file ]; then
		cp $default_file $target_file
		#rm $default_file
	fi

    if [ ! -f $target_file ]; then
		echo "id,manId,name,type,obsolete,familyId,managed,Utm,proxy,wizard,ztdOverPortConsole,backup,generateTemplate,restore,proxyWeb,category,detailedReportMail,detailedReportFirewall" > $target_file
		fixup_no_newline_at_eof $target_file
	fi

	grep -q "^$MOD_ID," $target_file && return 0

	fixup_no_newline_at_eof $target_file

	echo $MOD_ID,$MAN_ID,'"'$MOD_NAME'","H",0,0,1,0,0,1,0,1,0,1,0,U,0,0' >> $target_file

}

update_sdExtendedInfo_properties() {

	target_file="$SES_CONF/sdExtendedInfo.properties"

	keyname="${MAN_NAME}${MOD_NAME}"
	deviceid="${MAN_ID}-${MOD_ID}"

	grep -q -i "$keyname" $target_file && return 0

	fixup_no_newline_at_eof $target_file

	echo "sdExtendedInfo.modelKey.$keyname = $keyname" >> $target_file
	echo "sdExtendedInfo.router.$deviceid = $keyname" >> $target_file
	echo "sdExtendedInfo.jspType.$deviceid = $keyname" >> $target_file

}

update_manageLinks_properties() {

	target_file="$SES_CONF/manageLinks.properties"

	keyname="${MAN_NAME}${MOD_NAME}"

	grep -q -i "$keyname" $target_file && return 0

	dafile="$DA_DIR/$CONF_DIR/features.properties"
	cat $dafile | grep -e "= *yes" | while read line; do
		prop=$(sed 's: *=.*::g' <<< "$line")
		grep -q "$prop" $target_file || \
		echo "$prop.models = " >> $target_file
		sed -i "s:^\($prop.models.*\):\1 $keyname:"  $target_file
	done

}

update_ses_properties() {

	target_file="$SES_CONF/ses.properties"

	keyname=$(tolower $MAN_NAME)

	grep -q "^soc.device.supported.$keyname" $target_file && return 0

	echo "soc.device.supported.$keyname=1" >> $target_file

}

update_repository_properties() {

	target_file="$SES_CONF/repository.properties"

	keyname=$(toupper $MAN_NAME)

	grep -q "^repository.manufacturer *= *.* $keyname" $target_file || \
	sed -i 's/^\(repository.manufacturer.*\)/\1'" $keyname/"  $target_file

	keyname=$(tolower $MAN_NAME)
	deviceid="${MAN_ID}-${MOD_ID}"

	grep -q "^repository.model.$keyname" $target_file || \
	echo "repository.model.$keyname=$deviceid" >> $target_file

	dafile="$DA_DIR/$CONF_DIR/repository.properties"
	props="|$(cat $dafile | grep yes | awk '{printf $1 "|"}')"

	grep -q "^repository.access.$keyname" $target_file || \
	echo "repository.access.$keyname=|$props" >> $target_file
}



fixup_no_newline_at_eof() {
  ## ファイル末尾に改行がない場合の対処
  [ ! -f $1 ] && echo > $1
  /bin/cat "$1" | awk '{print}' > /tmp/msa.$$
  /bin/cp -p /tmp/msa.$$ "$1"
  /bin/rm -f /tmp/msa.$$
}

read_properties_files() {
	device_properties="$CONF_DIR/device.properties"
	[ -f "$DA_DIR/$device_properties" ] || \
		fatal "file not found: $device_properties"

	MAN_ID=$(read_property "$device_properties" "manufacturer.id")
	MOD_ID=$(read_property "$device_properties" "model.id")
	MOD_NAME=$(read_property "$device_properties" "model.name")
	MAN_NAME=$(read_property "$device_properties" "manufacturer.name")
}

check_sms_router_conf() {
	sms_router_conf="$CONF_DIR/sms_router.conf"
	[ -f "$DA_DIR/$sms_router_conf" ] || \
		fatal "file not found: $sms_router_conf"

	spec=$(cat $DA_DIR/$sms_router_conf | egrep '^model\s' | awk '{print $2}')
	man_id=$(cut -d : -f 1 <<< "$spec")
	mod_id=$(cut -d : -f 2 <<< "$spec")

	[ "$man_id" = "$MAN_ID" ] || \
		fatal "inconsistent definition: man_id=$man_id MAN_ID=$MAN_ID"
	[ "$mod_id" = "$MOD_ID" ] || \
		fatal "inconsistent definition: mod_id=$mod_id MOD_ID=$MOD_ID"
}

read_property() {
	file=$1
	prop=$2
	cat $DA_DIR/$file | sed 's:\r$::g' \
			  | egrep "^$prop" | cut -d = -f 2 | tr -d ' '
}

tolower() {
	echo $1 | tr '[A-Z]' '[a-z]'
}

toupper() {
	echo $1 | tr '[a-z]' '[A-Z]'
}

fatal() {
	echo $* >&2
	exit 1
}


main "$@"
